
march=
Target Report RejectNegative Joined
Generate code for a given architecture (default qdsp6v2)

mv1
Target RejectNegative
alias for -march=qdsp6v1

mv2
Target RejectNegative
alias for -march=qdsp6v2

mv3
Target RejectNegative
alias for -march=qdsp6v3

mv4
Target RejectNegative
alias for -march=qdsp6v4

mcpu=
Target Report RejectNegative Joined
currently an alias for march

mabi=
Target Report Undocumented RejectNegative Joined
Adhere to the specified ABI (default abi1 for V2, abi2 otherwise)

moslib=
Target Report RejectNegative Joined
Add the specified OS library to the link command in such a way that it can resolve symbols referenced by the C library

mG0lib
Target Report Mask(G0_LIB)
Link with standard libraries compiled with -G 0

mbuilding-multilib
Target Report Undocumented Mask(BUILDING_MULTILIB)
Indicates that GCC is currently building a multilib

mlong-calls
Target Report Mask(LONG_CALLS)
Make all calls indirect except those where the target is known to be close

msort-sda
Target Report Mask(SECTION_SORTING)
Disable small data sections sorting (default)

msort-sda-code-support
Target Report Mask(SECTION_SORTING_CODE_SUPPORT)
Disable small data sections sorting code support (default)

mextended-crossjumping
Target Report Mask(EXTENDED_CROSSJUMPING) Optimization
Allow Reordering instructions to facilitate crossjumping (default at -Os)

mdeep-phi-match
Target Report Mask(DEEP_PHI_MATCH) Optimization
Enable advanced PHI chain matching (default)

mno-falign
Target Report RejectNegative Optimization
Do not use the falign directive (default with -O0 or -Os)

mfalign-loops
Target Report RejectNegative Optimization
Use the falign directive before loops (default with -O or -O2)

mfalign-labels
Target Report RejectNegative Optimization
Use the falign directive before all labels

mfalign-all
Target Report RejectNegative Optimization
Use the falign directive before all labels and after packets containing calls (default with -O3)

mliteral-pool
Target Report Mask(LITERAL_POOL)
Enable placing literal values into .sdata (default)

mliteral-pool-addresses
Target Report Mask(LITERAL_POOL_ADDRESSES)
Enable placing literal address values into .sdata (default)

mhardware-loops
Target Report Mask(HARDWARE_LOOPS)
Enable hardware loops (default)

mnew-predicates
Target Report Mask(NEW_PREDICATES)
Enable .new-predicates (default)

mnew-value-stores
Target Report Mask(NEW_VALUE_STORES)
Enable .new-value stores (default)

mpackets
Target Report Mask(PACKETS)
Form packets of instructions for parallel execution (default at -O2)

mpullup
Target Report Mask(PULLUP) Optimization
Pull up instructions across basic block boundaries (default at -O2)

mbase-plus-index
Target Report Mask(BASE_PLUS_INDEX)
Enable base+index addressing if supported by the architecture (default)

mmemops
Target Report Mask(MEMOPS)
Enable load-op-store instructions if supported by the architecture (default)

mliteral-intrinsics
Target Report Mask(LITERAL_INTRINSICS)
Force intrinsics to mean the corresponding instruction, not just the corresponding operation

mv1-v2-uncached-data
Target Report Undocumented Mask(UNCACHED_DATA)
Limit the number of memory accesses in a packet to one

mlocal-combine
Target Report Mask(LOCAL_COMBINE) Optimization
Run local combine pass (default at -Os)

mresolve-restrict-aliasing
Target Report Mask(RESOLVE_RESTRICT_ALIASING) Optimization
Perform MIDI specific optimizations

menable-subreg1
Target Report Mask(ENABLE_SUBREG1) Optimization
Enable the subreg1 pass

maggregate-access
Target Report Mask(AGGREGATE_ACCESS) Optimization
Optimize large struct member accesses (default at -O2)

mduplex-scheduling
Target Report Mask(DUPLEX_SCHEDULING) Optimization
Enable duplex scheduling (default at -Os)

mannotate_duplex
Target Undocumented Mask(ANNOTATE_DUPLEX)
Duplex debugging

mpacketize-volatiles
Target Report Mask(PACKETIZE_VOLATILES)
Allow two volatile memory accesses in a packet

mnew-value-jump
Target Report Mask(NEW_VALUE_JUMP)
Enable new value jump (default)
